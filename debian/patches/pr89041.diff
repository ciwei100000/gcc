# DP: Fix PR d/89041, taken from the trunk.

gcc/d/

2019-03-09  Iain Buclaw  <ibuclaw@gdcproject.org>

	PR d/89041
	* d-codegen.cc (get_frame_for_symbol): Delegate literals defined in
	global scope don't have a frame pointer.

gcc/testsuite/

2019-03-09  Iain Buclaw  <ibuclaw@gdcproject.org>

	PR d/89041
	* gdc.dg/pr89041.d: New test.

 
--- a/src/gcc/d/d-codegen.cc
+++ b/src/gcc/d/d-codegen.cc
@@ -2158,15 +2158,25 @@ get_frame_for_symbol (Dsymbol *sym)
       fdparent = (FuncDeclaration *) sym;
     }
 
-  gcc_assert (fdparent != NULL);
+  /* Not a nested function, there is no frame pointer to pass.  */
+  if (fdparent == NULL)
+    {
+      /* Only delegate literals report as being nested, even if they are in
+	 global scope.  */
+      gcc_assert (fd && fd->isFuncLiteralDeclaration ());
+      return null_pointer_node;
+    }
+
+  gcc_assert (thisfd != NULL);
 
   if (thisfd != fdparent)
     {
       /* If no frame pointer for this function.  */
       if (!thisfd->vthis)
 	{
-	  sym->error ("is a nested function and cannot be accessed from %s",
-		      thisfd->toChars ());
+	  error_at (make_location_t (sym->loc),
+		    "%qs is a nested function and cannot be accessed from %qs",
+		    fd->toPrettyChars (), thisfd->toPrettyChars ());
 	  return null_pointer_node;
 	}
 
--- /dev/null
+++ b/src/gcc/testsuite/gdc.dg/pr89041.d
@@ -0,0 +1,13 @@
+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89041
+module pr89041;
+
+enum dg = delegate {};
+
+void fn()
+{
+    auto var = dg;
+
+    auto inner() {
+        return dg();
+    }
+}
